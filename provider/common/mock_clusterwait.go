// Code generated by MockGen. DO NOT EDIT.
// Source: cluster_waiter.go

// Package common is a generated GoMock package.
package common

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1 "github.com/openshift-online/ocm-sdk-go/clustersmgmt/v1"
)

// MockClusterWait is a mock of ClusterWait interface.
type MockClusterWait struct {
	ctrl     *gomock.Controller
	recorder *MockClusterWaitMockRecorder
}

// MockClusterWaitMockRecorder is the mock recorder for MockClusterWait.
type MockClusterWaitMockRecorder struct {
	mock *MockClusterWait
}

// NewMockClusterWait creates a new mock instance.
func NewMockClusterWait(ctrl *gomock.Controller) *MockClusterWait {
	mock := &MockClusterWait{ctrl: ctrl}
	mock.recorder = &MockClusterWaitMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClusterWait) EXPECT() *MockClusterWaitMockRecorder {
	return m.recorder
}

// WaitForClusterToBeReady mocks base method.
func (m *MockClusterWait) WaitForClusterToBeReady(ctx context.Context, clusterId string, waitTimeoutMin int64) (*v1.Cluster, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WaitForClusterToBeReady", ctx, clusterId, waitTimeoutMin)
	ret0, _ := ret[0].(*v1.Cluster)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// WaitForClusterToBeReady indicates an expected call of WaitForClusterToBeReady.
func (mr *MockClusterWaitMockRecorder) WaitForClusterToBeReady(ctx, clusterId, waitTimeoutMin interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WaitForClusterToBeReady", reflect.TypeOf((*MockClusterWait)(nil).WaitForClusterToBeReady), ctx, clusterId, waitTimeoutMin)
}

// WaitForStdComputeNodesToBeReady mocks base method.
func (m *MockClusterWait) WaitForStdComputeNodesToBeReady(ctx context.Context, clusterId string, waitTimeoutMin int64) (*v1.Cluster, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WaitForStdComputeNodesToBeReady", ctx, clusterId, waitTimeoutMin)
	ret0, _ := ret[0].(*v1.Cluster)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// WaitForStdComputeNodesToBeReady indicates an expected call of WaitForStdComputeNodesToBeReady.
func (mr *MockClusterWaitMockRecorder) WaitForStdComputeNodesToBeReady(ctx, clusterId, waitTimeoutMin interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WaitForStdComputeNodesToBeReady", reflect.TypeOf((*MockClusterWait)(nil).WaitForStdComputeNodesToBeReady), ctx, clusterId, waitTimeoutMin)
}
